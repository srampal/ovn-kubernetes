// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/ovn-org/ovn-kubernetes/go-controller/pkg/crd/clusternetworkpolicy/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// ClusterNetworkPolicyLister helps list ClusterNetworkPolicies.
// All objects returned here must be treated as read-only.
type ClusterNetworkPolicyLister interface {
	// List lists all ClusterNetworkPolicies in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ClusterNetworkPolicy, err error)
	// ClusterNetworkPolicies returns an object that can list and get ClusterNetworkPolicies.
	ClusterNetworkPolicies(namespace string) ClusterNetworkPolicyNamespaceLister
	ClusterNetworkPolicyListerExpansion
}

// clusterNetworkPolicyLister implements the ClusterNetworkPolicyLister interface.
type clusterNetworkPolicyLister struct {
	indexer cache.Indexer
}

// NewClusterNetworkPolicyLister returns a new ClusterNetworkPolicyLister.
func NewClusterNetworkPolicyLister(indexer cache.Indexer) ClusterNetworkPolicyLister {
	return &clusterNetworkPolicyLister{indexer: indexer}
}

// List lists all ClusterNetworkPolicies in the indexer.
func (s *clusterNetworkPolicyLister) List(selector labels.Selector) (ret []*v1.ClusterNetworkPolicy, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ClusterNetworkPolicy))
	})
	return ret, err
}

// ClusterNetworkPolicies returns an object that can list and get ClusterNetworkPolicies.
func (s *clusterNetworkPolicyLister) ClusterNetworkPolicies(namespace string) ClusterNetworkPolicyNamespaceLister {
	return clusterNetworkPolicyNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// ClusterNetworkPolicyNamespaceLister helps list and get ClusterNetworkPolicies.
// All objects returned here must be treated as read-only.
type ClusterNetworkPolicyNamespaceLister interface {
	// List lists all ClusterNetworkPolicies in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1.ClusterNetworkPolicy, err error)
	// Get retrieves the ClusterNetworkPolicy from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1.ClusterNetworkPolicy, error)
	ClusterNetworkPolicyNamespaceListerExpansion
}

// clusterNetworkPolicyNamespaceLister implements the ClusterNetworkPolicyNamespaceLister
// interface.
type clusterNetworkPolicyNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all ClusterNetworkPolicies in the indexer for a given namespace.
func (s clusterNetworkPolicyNamespaceLister) List(selector labels.Selector) (ret []*v1.ClusterNetworkPolicy, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.ClusterNetworkPolicy))
	})
	return ret, err
}

// Get retrieves the ClusterNetworkPolicy from the indexer for a given namespace and name.
func (s clusterNetworkPolicyNamespaceLister) Get(name string) (*v1.ClusterNetworkPolicy, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("clusternetworkpolicy"), name)
	}
	return obj.(*v1.ClusterNetworkPolicy), nil
}
